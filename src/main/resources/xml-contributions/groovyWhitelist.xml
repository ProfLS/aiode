<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<whitelistConfiguration xmlns="whitelistSpace">
  <whitelistMethods class="java.lang.Object" allowConstructorCall="true">
    <method name="getClass"/>
    <method name="equals"/>
    <method name="toString"/>
    <method name="hashCode"/>
  </whitelistMethods>
  <whitelistMethods class="java.lang.String" allowConstructorCall="true">
    <method name="length"/>
    <method name="isEmpty"/>
    <method name="charAt"/>
    <method name="codePointAt"/>
    <method name="codePointBefore"/>
    <method name="codePointCount"/>
    <method name="offsetByCodePoints"/>
    <method name="getChars"/>
    <method name="getBytes"/>
    <method name="contentEquals"/>
    <method name="equalsIgnoreCase"/>
    <method name="compareToIgnoreCase"/>
    <method name="regionMatches"/>
    <method name="startsWith"/>
    <method name="endsWith"/>
    <method name="indexOf"/>
    <method name="lastIndexOf"/>
    <method name="substring"/>
    <method name="subSequence"/>
    <method name="concat"/>
    <method name="replace"/>
    <method name="matches"/>
    <method name="contains"/>
    <method name="replaceFirst"/>
    <method name="replaceAll"/>
    <method name="replace"/>
    <method name="split"/>
    <method name="join"/>
    <method name="toLowerCase"/>
    <method name="toUpperCase"/>
    <method name="trim"/>
    <method name="strip"/>
    <method name="stripLeading"/>
    <method name="stripTrailing"/>
    <method name="isBlank"/>
    <method name="lines"/>
    <method name="chars"/>
    <method name="codePoints"/>
    <method name="toCharArray"/>
    <method name="format"/>
    <method name="valueOf"/>
    <method name="copyValueOf"/>
    <method name="repeat"/>
    <!-- groovy enhanced jdk -->
    <method name="asType"/>
    <method name="collectReplacements"/>
    <method name="decodeBase64"/>
    <method name="decodeBase64Url"/>
    <method name="decodeHex"/>
    <method name="drop"/>
    <method name="eachMatch"/>
    <method name="getAt"/>
    <method name="leftShift"/>
    <method name="plus"/>
    <method name="size"/>
    <method name="take"/>
    <method name="toBoolean"/>
    <method name="toCharacter"/>
    <method name="toURI"/>
    <method name="toURL"/>
  </whitelistMethods>
  <whitelistMethods class="java.lang.CharSequence">
    <method name="asBoolean"/>
    <method name="asType"/>
    <method name="bitwiseNegate"/>
    <method name="capitalize"/>
    <method name="center"/>
    <method name="contains"/>
    <method name="containsIgnoreCase"/>
    <method name="count"/>
    <method name="denormalize"/>
    <method name="drop"/>
    <method name="dropRight"/>
    <method name="dropWhile"/>
    <method name="eachLine"/>
    <method name="eachMatch"/>
    <method name="endsWithAny"/>
    <method name="expand"/>
    <method name="expandLine"/>
    <method name="find"/>
    <method name="findAll"/>
    <method name="getAt"/>
    <method name="getChars"/>
    <method name="isAllWhitespace"/>
    <method name="isBigDecimal"/>
    <method name="isBigInteger"/>
    <method name="isBlank"/>
    <method name="isCase"/>
    <method name="isDouble"/>
    <method name="isFloat"/>
    <method name="isInteger"/>
    <method name="isLong"/>
    <method name="isNumber"/>
    <method name="leftShift"/>
    <method name="matches"/>
    <method name="minus"/>
    <method name="multiply"/>
    <method name="next"/>
    <method name="normalize"/>
    <method name="padLeft"/>
    <method name="padRight"/>
    <method name="plus"/>
    <method name="previous"/>
    <method name="readLines"/>
    <method name="replace"/>
    <method name="replaceAll"/>
    <method name="replaceFirst"/>
    <method name="reverse"/>
    <method name="size"/>
    <method name="split"/>
    <method name="splitEachLine"/>
    <method name="startsWithAny"/>
    <method name="startsWithIgnoreCase"/>
    <method name="stripIndent"/>
    <method name="stripMargin"/>
    <method name="take"/>
    <method name="takeAfter"/>
    <method name="takeBefore"/>
    <method name="takeBetween"/>
    <method name="takeRight"/>
    <method name="takeWhile"/>
    <method name="toBigDecimal"/>
    <method name="toBigInteger"/>
    <method name="toDouble"/>
    <method name="toFloat"/>
    <method name="toInteger"/>
    <method name="toList"/>
    <method name="toLong"/>
    <method name="toSet"/>
    <method name="toShort"/>
    <method name="tokenize"/>
    <method name="tr"/>
    <method name="uncapitalize"/>
    <method name="unexpand"/>
    <method name="unexpandLine"/>
  </whitelistMethods>
  <whitelistMethods class="java.lang.Comparable">
    <method name="compareTo"/>
  </whitelistMethods>
  <whitelistMethods class="java.util.Collection">
    <method name="&lt;init&gt;"/>
    <method name="size"/>
    <method name="isEmpty"/>
    <method name="contains"/>
    <method name="iterator"/>
    <method name="toArray"/>
    <method name="add"/>
    <method name="remove"/>
    <method name="containsAll"/>
    <method name="addAll"/>
    <method name="removeAll"/>
    <method name="removeIf"/>
    <method name="retainAll"/>
    <method name="clear"/>
    <method name="spliterator"/>
    <method name="stream"/>
    <!-- groovy enhanced jdk -->
    <method name="asBoolean"/>
    <method name="asImmutable"/>
    <method name="asType"/>
    <method name="asUnmodifiable"/>
    <method name="collectNested"/>
    <method name="each"/>
    <method name="eachWithIndex"/>
    <method name="find"/>
    <method name="findAll"/>
    <method name="flatten"/>
    <method name="getAt"/>
    <method name="getIndices"/>
    <method name="grep"/>
    <method name="inject"/>
    <method name="intersect"/>
    <method name="isCase"/>
    <method name="leftShift"/>
    <method name="minus"/>
    <method name="plus"/>
    <method name="split"/>
    <method name="toListString"/>
    <method name="toSet"/>
    <method name="unique"/>
  </whitelistMethods>
  <whitelistMethods class="java.util.List">
    <method name="replaceAll"/>
    <method name="sort"/>
    <method name="get"/>
    <method name="set"/>
    <method name="set"/>
    <method name="indexOf"/>
    <method name="lastIndexOf"/>
    <method name="subList"/>
    <method name="of"/>
    <!-- groovy enhanced jdk -->
    <method name="drop"/>
    <method name="dropRight"/>
    <method name="dropWhile"/>
    <method name="findAll"/>
    <method name="first"/>
    <method name="head"/>
    <method name="multiply"/>
    <method name="pop"/>
    <method name="push"/>
    <method name="putAt"/>
    <method name="removeAt"/>
    <method name="removeLast"/>
    <method name="reverse"/>
    <method name="reverseEach"/>
    <method name="subsequences"/>
    <method name="swap"/>
    <method name="tail"/>
    <method name="take"/>
    <method name="takeRight"/>
    <method name="takeWhile"/>
    <method name="toUnique"/>
  </whitelistMethods>
  <whitelistMethods class="java.util.Set">
    <method name="of"/>
    <method name="asImmutable"/>
    <method name="asSynchronized"/>
    <method name="asUnmodifiable"/>
    <method name="each"/>
    <method name="eachWithIndex"/>
    <method name="findAll"/>
    <method name="flatten"/>
    <method name="grep"/>
    <method name="intersect"/>
    <method name="leftShift"/>
    <method name="minus"/>
    <method name="plus"/>
    <method name="split"/>
  </whitelistMethods>
  <whitelistMethods class="java.util.Arrays">
    <method name="rangeCheck"/>
    <method name="sort"/>
    <method name="parallelSort"/>
    <method name="parallelPrefix"/>
    <method name="binarySearch"/>
    <method name="equals"/>
    <method name="fill"/>
    <method name="copyOf"/>
    <method name="copyOfRange"/>
    <method name="asList"/>
    <method name="hashCode"/>
    <method name="deepHashCode"/>
    <method name="deepEquals"/>
    <method name="toString"/>
    <method name="deepToString"/>
    <method name="setAll"/>
    <method name="parallelSetAll"/>
    <method name="spliterator"/>
    <method name="stream"/>
    <method name="compare"/>
    <method name="compareUnsigned"/>
    <method name="mismatch"/>
  </whitelistMethods>
  <whitelistMethods class="java.util.Map">
    <method name="&lt;init&gt;"/>
    <method name="size"/>
    <method name="isEmpty"/>
    <method name="containsKey"/>
    <method name="containsValue"/>
    <method name="get"/>
    <method name="put"/>
    <method name="remove"/>
    <method name="putAll"/>
    <method name="clear"/>
    <method name="keySet"/>
    <method name="values"/>
    <method name="entrySet"/>
    <method name="equals"/>
    <method name="hashCode"/>
    <method name="getOrDefault"/>
    <method name="forEach"/>
    <method name="replaceAll"/>
    <method name="putIfAbsent"/>
    <method name="replace"/>
    <method name="computeIfAbsent"/>
    <method name="computeIfPresent"/>
    <method name="compute"/>
    <method name="merge"/>
    <method name="of"/>
    <method name="ofEntries"/>
    <method name="entry"/>
    <method name="copyOf"/>
    <!-- groovy enhanced jdk -->
    <method name="any"/>
    <method name="asBoolean"/>
    <method name="asImmutable"/>
    <method name="asSynchronized"/>
    <method name="asUnmodifiable"/>
    <method name="collect"/>
    <method name="collectEntries"/>
    <method name="collectMany"/>
    <method name="count"/>
    <method name="countBy"/>
    <method name="drop"/>
    <method name="dropWhile"/>
    <method name="each"/>
    <method name="eachWithIndex"/>
    <method name="every"/>
    <method name="find"/>
    <method name="findAll"/>
    <method name="findResult"/>
    <method name="findResults"/>
    <method name="getAt"/>
    <method name="groupBy"/>
    <method name="groupEntriesBy"/>
    <method name="inject"/>
    <method name="intersect"/>
    <method name="isCase"/>
    <method name="leftShift"/>
    <method name="max"/>
    <method name="min"/>
    <method name="minus"/>
    <method name="plus"/>
    <method name="putAt"/>
    <method name="removeAll"/>
    <method name="retainAll"/>
    <method name="reverseEach"/>
    <method name="sort"/>
    <method name="spread"/>
    <method name="subMap"/>
    <method name="take"/>
    <method name="takeWhile"/>
    <method name="toMapString"/>
    <method name="toSorted"/>
    <method name="toSpreadMap"/>
    <method name="withDefault"/>
  </whitelistMethods>
  <whitelistMethods class="java.util.Map$Entry">
    <method name="&lt;init&gt;"/>
    <method name="getKey"/>
    <method name="getValue"/>
    <method name="setValue"/>
    <method name="equals"/>
    <method name="hashCode"/>
    <method name="comparingByKey"/>
    <method name="comparingByValue"/>
  </whitelistMethods>
  <whitelistMethods class="java.lang.Iterable">
    <method name="&lt;init&gt;"/>
    <method name="iterator"/>
    <method name="forEach"/>
    <method name="spliterator"/>
    <!-- groovy enhanced jdk -->
    <method name="any"/>
    <method name="asCollection"/>
    <method name="asList"/>
    <method name="asType"/>
    <method name="chop"/>
    <method name="collate"/>
    <method name="collect"/>
    <method name="collectEntries"/>
    <method name="collectMany"/>
    <method name="collectNested"/>
    <method name="combinations"/>
    <method name="contains"/>
    <method name="containsAll"/>
    <method name="count"/>
    <method name="countBy"/>
    <method name="disjoint"/>
    <method name="drop"/>
    <method name="dropRight"/>
    <method name="dropWhile"/>
    <method name="each"/>
    <method name="eachCombination"/>
    <method name="eachPermutation"/>
    <method name="eachWithIndex"/>
    <method name="every"/>
    <method name="findIndexesOf"/>
    <method name="findIndexValues"/>
    <method name="findLastIndexOf"/>
    <method name="findResult"/>
    <method name="first"/>
    <method name="flatten"/>
    <method name="getAt"/>
    <method name="groupBy"/>
    <method name="head"/>
    <method name="indexed"/>
    <method name="init"/>
    <method name="inits"/>
    <method name="intersect"/>
    <method name="isEmpty"/>
    <method name="join"/>
    <method name="last"/>
    <method name="max"/>
    <method name="min"/>
    <method name="minus"/>
    <method name="multiply"/>
    <method name="permutations"/>
    <method name="plus"/>
    <method name="size"/>
    <method name="sort"/>
    <method name="sum"/>
    <method name="tail"/>
    <method name="tails"/>
    <method name="take"/>
    <method name="takeRight"/>
    <method name="takeWhile"/>
    <method name="toList"/>
    <method name="toSet"/>
    <method name="toSorted"/>
    <method name="toUnique"/>
    <method name="withIndex"/>
  </whitelistMethods>
  <whitelistMethods class="net.robinfriedli.aiode.command.CommandContext">
    <method name="getMessage"/>
    <method name="getCommandBody"/>
    <method name="getCommandHistory"/>
  </whitelistMethods>
  <whitelistMethods class="net.robinfriedli.aiode.concurrent.ExecutionContext">
    <method name="getUser"/>
    <method name="getMember"/>
    <method name="getGuild"/>
    <method name="getChannel"/>
    <method name="getGuildContext"/>
  </whitelistMethods>
  <whitelistMethods class="net.robinfriedli.aiode.entities.CommandHistory">
    <method name="getTimestamp"/>
    <method name="getCommandIdentifier"/>
    <method name="getInput"/>
    <method name="getGuild"/>
    <method name="getGuildId"/>
    <method name="getUser"/>
    <method name="getUserId"/>
    <method name="isCompletedSuccessfully"/>
    <method name="getDurationMs"/>
    <method name="isUnexpectedException"/>
    <method name="getErrorMessage"/>
    <method name="isFailedManually"/>
    <method name="getStartMillis"/>
    <method name="getCommandBody"/>
    <method name="getCommandContextId"/>
    <method name="isWidget"/>
  </whitelistMethods>
  <whitelistMethods class="net.robinfriedli.aiode.command.Command">
    <method name="isFailed"/>
    <method name="getContext"/>
    <method name="isPrivileged"/>
    <method name="getCommandBody"/>
    <method name="getIdentifier"/>
    <method name="display"/>
    <method name="abort"/>
    <method name="isAborted"/>
  </whitelistMethods>
  <whitelistMethods class="net.robinfriedli.aiode.command.AbstractCommand">
    <method name="run" maxInvocationCount="5"/>
    <method name="getCategory"/>
    <method name="getCommandInput"/>
    <method name="getMessageService"/>
    <method name="argumentSet"/>
    <method name="getArgumentValue"/>
    <method name="getArgumentValueWithType"/>
    <method name="getArgumentValueOrElse"/>
    <method name="getArgumentValueWithTypeOrElse"/>
    <method name="getArgumentValueWithTypeOrCompute"/>
    <method name="isPartitioned"/>
    <method name="getDescription"/>
    <method name="requiresInput"/>
  </whitelistMethods>
  <whitelistMethods class="net.robinfriedli.aiode.command.SecurityManager">
    <method name="askPermission"/>
    <method name="ensurePermission"/>
    <method name="hasElevatedPermissions"/>
    <method name="isAdmin"/>
    <method name="isSupporter"/>
  </whitelistMethods>
  <whitelistMethods class="net.robinfriedli.aiode.command.commands.general.AnswerCommand">
    <method name="getTargetCommand"/>
  </whitelistMethods>
  <whitelistMethods class="net.robinfriedli.aiode.discord.GuildContext">
    <method name="getGuild"/>
    <method name="getPlayback"/>
    <method name="getSpecification"/>
    <method name="getBotName"/>
    <method name="getPrefix"/>
  </whitelistMethods>
  <whitelistMethods class="net.robinfriedli.aiode.audio.AudioManager">
    <method name="startPlayback"/>
    <method name="startOrResumePlayback"/>
    <method name="playTrack"/>
    <method name="getPlaybackForGuild"/>
    <method name="getQueue"/>
    <method name="setChannel" maxInvocationCount="5"/>
  </whitelistMethods>
  <whitelistMethods class="net.robinfriedli.aiode.audio.AudioPlayback">
    <method name="isPlaying"/>
    <method name="pause"/>
    <method name="unpause"/>
    <method name="isPaused"/>
    <method name="stop"/>
    <method name="getGuild"/>
    <method name="getAudioQueue"/>
    <method name="isRepeatOne"/>
    <method name="setRepeatOne"/>
    <method name="isRepeatAll"/>
    <method name="setRepeatAll"/>
    <method name="isShuffle"/>
    <method name="setShuffle"/>
    <method name="getCurrentPositionMs"/>
    <method name="setPosition"/>
    <method name="getVolume"/>
    <method name="setVolume"/>
    <method name="leaveChannel"/>
  </whitelistMethods>
  <whitelistMethods class="net.robinfriedli.aiode.audio.Playable">
    <method name="getPlaybackUrl"/>
    <method name="getId"/>
    <method name="getTitle"/>
    <method name="title"/>
    <method name="getTitleNow"/>
    <method name="getDisplay"/>
    <method name="display"/>
    <method name="getDisplayNow"/>
    <method name="getDurationMs"/>
    <method name="durationMs"/>
    <method name="getDurationNow"/>
    <method name="getAlbumCoverUrl"/>
    <method name="fetch"/>
  </whitelistMethods>
  <whitelistMethods class="net.robinfriedli.aiode.discord.MessageService" maxMethodInvocations="5">
    <method name="send"/>
    <method name="sendWithLogo"/>
    <method name="sendSuccess"/>
    <method name="sendError"/>
    <method name="sendException"/>
    <method name="sendTemporary"/>
    <method name="sendWrapped"/>
  </whitelistMethods>
  <whitelistMethods class="net.robinfriedli.aiode.entities.GuildSpecification">
    <method name="getGuildName"/>
    <method name="getGuildId"/>
    <method name="getBotName"/>
    <method name="getPrefix"/>
    <method name="getAccessConfigurations"/>
    <method name="getAccessConfiguration"/>
    <method name="isSendPlaybackNotification"/>
    <method name="isEnableAutoPause"/>
    <method name="getColor"/>
    <method name="getDefaultSource"/>
    <method name="getDefaultListSource"/>
    <method name="getArgumentPrefix"/>
    <method name="getTempMessageTimeout"/>
    <method name="getDefaultTextChannelId"/>
  </whitelistMethods>
  <whitelistMethods class="net.robinfriedli.aiode.scripting.ScriptCommandRunner">
    <method name="run" maxInvocationCount="5"/>
  </whitelistMethods>
  <whitelistMethods class="net.robinfriedli.aiode.util.Util">
    <method name="getKeysForValue"/>
    <method name="normalizeMillis"/>
    <method name="appendEmbedList"/>
    <method name="normalizeWhiteSpace"/>
  </whitelistMethods>
  <whitelistMethods class="net.dv8tion.jda.api.entities.Guild">
    <method name="getMemberCount"/>
    <method name="getName"/>
    <method name="getIconId"/>
    <method name="getIconUrl"/>
    <method name="getFeatures"/>
    <method name="getSplashId"/>
    <method name="getSplashUrl"/>
    <method name="getVanityCode"/>
    <method name="getVanityUrl"/>
    <method name="getDescription"/>
    <method name="getBannerId"/>
    <method name="getBannerUrl"/>
    <method name="getBoostTier"/>
    <method name="getBoostCount"/>
    <method name="getBoosters"/>
    <method name="getMaxBitrate"/>
    <method name="getMaxEmotes"/>
    <method name="getMaxMembers"/>
    <method name="getAfkChannel"/>
    <method name="getSystemChannel"/>
    <method name="getOwner"/>
    <method name="getOwnerIdLong"/>
    <method name="getOwnerId"/>
    <method name="getAfkTimeout"/>
    <method name="getRegion"/>
    <method name="getRegionRaw"/>
    <method name="isMember"/>
    <method name="getSelfMember"/>
    <method name="getMember"/>
    <method name="getMemberById"/>
    <method name="getMemberByTag"/>
    <method name="getMembers"/>
    <method name="getMembersByName"/>
    <method name="getMembersByNickname"/>
    <method name="getMembersByEffectiveName"/>
    <method name="getMembersWithRoles"/>
    <method name="getGuildChannelById"/>
    <method name="getCategoryById"/>
    <method name="getCategories"/>
    <method name="getCategoriesByName"/>
    <method name="getStoreChannelById"/>
    <method name="getStoreChannels"/>
    <method name="getStoreChannelsByName"/>
    <method name="getTextChannelById"/>
    <method name="getTextChannels"/>
    <method name="getTextChannelsByName"/>
    <method name="getVoiceChannelById"/>
    <method name="getVoiceChannels"/>
    <method name="getVoiceChannelsByName"/>
    <method name="getRoleById"/>
    <method name="getRoles"/>
    <method name="getRolesByName"/>
    <method name="getEmoteById"/>
    <method name="getEmotes"/>
    <method name="getEmotesByName"/>
  </whitelistMethods>
  <whitelistMethods class="net.dv8tion.jda.api.entities.Message">
    <method name="getMentionedUsers"/>
    <method name="getMentionedChannels"/>
    <method name="getMentionedRoles"/>
    <method name="getMentionedMembers"/>
    <method name="mentionsEveryone"/>
    <method name="isEdited"/>
    <method name="getTimeEdited"/>
    <method name="getAuthor"/>
    <method name="getMember"/>
    <method name="getJumpUrl"/>
    <method name="getContentDisplay"/>
    <method name="getContentRaw"/>
    <method name="getContentStripped"/>
    <method name="getInvites"/>
    <method name="getChannel"/>
    <method name="getPrivateChannel"/>
    <method name="getTextChannel"/>
    <method name="getGuild"/>
    <method name="delete"/>
    <method name="isPinned"/>
    <method name="pin"/>
    <method name="unpin"/>
    <method name="addReaction"/>
    <method name="clearReactions"/>
    <method name="removeReaction"/>
  </whitelistMethods>
  <whitelistMethods class="net.dv8tion.jda.api.entities.User">
    <method name="getName"/>
    <method name="getDiscriminator"/>
    <method name="getAvatarId"/>
    <method name="getAvatarUrl"/>
    <method name="getDefaultAvatarId"/>
    <method name="getDefaultAvatarUrl"/>
    <method name="getEffectiveAvatarUrl"/>
    <method name="getAsTag"/>
    <method name="hasPrivateChannel"/>
    <method name="isBot"/>
  </whitelistMethods>
  <whitelistMethods class="net.dv8tion.jda.api.entities.Member">
    <method name="getUser"/>
    <method name="getGuild"/>
    <method name="getTimeJoined"/>
    <method name="getTimeBoosted"/>
    <method name="getVoiceState"/>
    <method name="getActivities"/>
    <method name="getOnlineStatus"/>
    <method name="getNickname"/>
    <method name="getEffectiveName"/>
    <method name="getRoles"/>
    <method name="getColor"/>
    <method name="getColorRaw"/>
    <method name="canInteract"/>
    <method name="isOwner"/>
    <method name="getDefaultChannel"/>
  </whitelistMethods>
  <whitelistMethods class="net.dv8tion.jda.api.entities.channel.middleman.MessageChannel">
    <method name="getName"/>
    <method name="getType"/>
    <method name="sendMessage"/>
    <method name="sendMessageFormat"/>
  </whitelistMethods>
  <whitelistMethods class="net.dv8tion.jda.api.entities.IMentionable">
    <method name="getAsMention"/>
  </whitelistMethods>
  <whitelistMethods class="net.dv8tion.jda.api.entities.ISnowflake">
    <method name="getId"/>
    <method name="getIdLong"/>
    <method name="getTimeCreated"/>
  </whitelistMethods>
  <whitelistMethods class="net.dv8tion.jda.api.entities.Role">
    <method name="getPosition"/>
    <method name="getPositionRaw"/>
    <method name="getName"/>
    <method name="isManaged"/>
    <method name="isHoisted"/>
    <method name="isMentionable"/>
    <method name="getPermissionsRaw"/>
    <method name="getColor"/>
    <method name="getColorRaw"/>
    <method name="isPublicRole"/>
    <method name="canInteract"/>
    <method name="getGuild"/>
  </whitelistMethods>
  <whitelistMethods class="net.dv8tion.jda.api.entities.IPermissionHolder">
    <method name="getGuild"/>
    <method name="getPermissions"/>
    <method name="getPermissionsExplicit"/>
    <method name="hasPermission"/>
    <method name="hasAccess"/>
  </whitelistMethods>
  <whitelistMethods class="net.dv8tion.jda.api.requests.RestAction" maxMethodInvocations="5">
    <!--
    do not allow queue because of the async callbacks that method provides; these callbacks are executed in a thread
    were no GroovyInterceptor is registered, meaning within that closure the user would be free to execute anything
    they want; e.g.:
    .eval "context.channel.sendMessage('destroyed').queue({msg -> System.exit(0)})"

    with submit we can control what methods of CompletableFuture may be used

    -> this issue is now fixed with the new compile time checks, yet allowing async callbacks is still problematic when it
       comes to invocation counts
     -->
    <method name="complete"/>
    <method name="submit"/>
  </whitelistMethods>
  <whitelistMethods class="net.dv8tion.jda.api.entities.channel.middleman.AudioChannel">
    <method name="getUserLimit"/>
  </whitelistMethods>
  <whitelistMethods class="net.dv8tion.jda.api.entities.channel.middleman.GuildChannel">
    <method name="getGuild"/>
  </whitelistMethods>
  <whitelistMethods class="net.dv8tion.jda.api.entities.channel.Channel">
    <method name="getName"/>
    <method name="getType"/>
  </whitelistMethods>
  <whitelistMethods class="java.lang.Thread">
    <method name="currentThread"/>
    <method name="isInterrupted"/>
  </whitelistMethods>
  <whitelistMethods class="groovy.lang.Closure">
    <method name="call"/>
  </whitelistMethods>
  <whitelistMethods class="groovy.lang.Script">
    <method name="invokeMethod"/>
  </whitelistMethods>
  <!-- classes with full access, this also applies to all subclasses, including methods declared in a subclass -->
  <whitelistClass class="java.lang.Boolean"/>
  <whitelistClass class="java.lang.Integer"/>
  <whitelistClass class="java.lang.Long"/>
  <whitelistClass class="java.lang.StringBuilder"/>
  <whitelistClass class="java.lang.Double"/>
  <whitelistClass class="java.lang.Float"/>
  <whitelistClass class="java.lang.Number"/>
  <whitelistClass class="java.lang.Character"/>
  <whitelistClass class="java.lang.Math"/>
  <whitelistClass class="java.math.BigDecimal"/>
  <whitelistClass class="java.time.OffsetTime"/>
  <whitelistClass class="java.time.OffsetDateTime"/>
  <whitelistClass class="java.time.LocalDate"/>
  <whitelistClass class="java.time.LocalDateTime"/>
  <whitelistClass class="java.util.stream.Stream"/>
  <whitelistClass class="java.util.stream.IntStream"/>
  <whitelistClass class="java.util.stream.Collectors"/>
  <whitelistClass class="java.util.Random"/>
  <whitelistClass class="net.dv8tion.jda.api.EmbedBuilder"/>
  <whitelistClass class="net.robinfriedli.aiode.audio.queue.AudioQueue"/>
  <whitelistClass onlyGenerated="true" class="net.robinfriedli.aiode.scripting.GroovyCompilationCustomizer$RuntimeInvocationCountChecker"/>
  <whitelistClass onlyGenerated="true" class="org.codehaus.groovy.runtime.InvokerHelper"/>
</whitelistConfiguration>
